name: ${{ values.app_name }}-cicd
on: 
  push:
    branches:
      - main
jobs:
  ci:
    runs-on: self-hosted
    steps:
      - name: COMMIT_ID_SHA
        shell: bash
        run: |
          echo "COMMIT_ID=${GITHUB_SHA::6}" >> "$GITHUB_ENV"         
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ '${{ secrets.DOCKERHUB_USERNAME }}' }}
          password: ${{ '${{ secrets.DOCKERHUB_PASSWORD }}' }}
          
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push docker images
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: lumszy/${{ values.app_name }}:${{ '${{ env.COMMIT_ID }}' }}
    outputs:
      output1: ${{ '${{ env.COMMIT_ID }}' }}
  
  cd:
    needs: ci
    runs-on: self-hosted
    steps:
      - name: clone repository
        uses: actions/checkout@v3

      - name: deploy changes to values file
        shell: bash
        run: |
          #echo ${{env.COMMIT_ID}}
          echo ${{ "${{ needs.ci.outputs.output1 }}" }}
          pip install yq
          yq -Yi '.image.tag = "${{ "${{ needs.ci.outputs.output1 }}" }}"' charts/${{ values.app_name }}/values-${{ values.app_env }}.yaml
      
      - name: commit changes to GITHUB
        uses: EndBug/add-and-commit@v9
        with:
          author_name: github workflows
          author_email: github_workflow@example.com
          message: 'Update values.yaml with commit ${{ '${{needs.ci.outputs.output1}}' }}'
          #message: 'Update values.yaml with commit ${{needs.ci.outputs.output1}}'

      - name: Install argocd 
        shell: bash
        run: |
          curl -sSL -o argocd-linux-amd64 https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
          sudo install -m 555 argocd-linux-amd64 /usr/local/bin/argocd
          rm argocd-linux-amd64
      
      - name: Connect github repo to Argocd
        shell: bash 
        run: |
          argocd login argocd-server.argocd --insecure --grpc-web --username admin --password ${{ '${{ secrets.ARGOCD_PASSWORD }}' }}
          argocd repo list \
          | grep -q 'https://github.com/lumszyOrg/${{ values.app_name }}'
          || argocd repo add https://github.com/lumszyOrg/${{ values.app_name }}
      
      - name: Create Argocd App for ${{ values.app_name }}
        shell: bash
        run: |
          argocd app create ${{ values.app_name }} --repo https://github.com/lumszyOrg/${{ values.app_name }}

      - name: argocd sync application
        shell: bash
        run: |
          argocd login argocd-server.argocd --insecure --grpc-web --username admin --password ${{ '${{ secrets.ARGOCD_PASSWORD }}' }}
          argocd app sync ${{ values.app_name }}